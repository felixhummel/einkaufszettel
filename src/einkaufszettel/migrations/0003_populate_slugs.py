# Generated by Django 5.2.4 on 2025-08-04 19:17

from django.db import migrations
from django.utils.text import slugify


def generate_unique_slug_migration(model_class, name, exclude_id=None, zettel=None):
    """Generate a unique slug from name for the given model in migration"""
    base_slug = slugify(name)
    if not base_slug:
        base_slug = 'item'

    slug = base_slug
    counter = 1

    while True:
        queryset = model_class.objects.filter(slug=slug)

        # For Item model, check uniqueness within the zettel
        if zettel is not None:
            queryset = queryset.filter(zettel=zettel)

        # Exclude current instance when updating
        if exclude_id:
            queryset = queryset.exclude(id=exclude_id)

        if not queryset.exists():
            return slug

        counter += 1
        slug = f"{base_slug}-{counter}"


def populate_slugs(apps, schema_editor):
    """Forward migration: populate slug fields"""
    Zettel = apps.get_model('einkaufszettel', 'Zettel')
    Item = apps.get_model('einkaufszettel', 'Item')

    # Populate Zettel slugs
    for zettel in Zettel.objects.filter(slug__isnull=True):
        zettel.slug = generate_unique_slug_migration(Zettel, zettel.name, exclude_id=zettel.id)
        zettel.save()

    # Populate Item slugs
    for item in Item.objects.filter(slug__isnull=True):
        item.slug = generate_unique_slug_migration(Item, item.name, exclude_id=item.id, zettel=item.zettel)
        item.save()


def reverse_populate_slugs(apps, schema_editor):
    """Reverse migration: clear slug fields"""
    Zettel = apps.get_model('einkaufszettel', 'Zettel')
    Item = apps.get_model('einkaufszettel', 'Item')

    Zettel.objects.update(slug=None)
    Item.objects.update(slug=None)


class Migration(migrations.Migration):

    dependencies = [
        ('einkaufszettel', '0002_item_slug_zettel_slug_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_slugs, reverse_populate_slugs),
    ]
